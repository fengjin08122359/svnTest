{
  "_args": [
    [
      {
        "raw": "nodeJs-zip@^1.0.4",
        "scope": null,
        "escapedName": "nodeJs-zip",
        "name": "nodeJs-zip",
        "rawSpec": "^1.0.4",
        "spec": ">=1.0.4 <2.0.0",
        "type": "range"
      },
      "D:\\nodesvn"
    ]
  ],
  "_cnpm_publish_time": 1473768720528,
  "_from": "nodeJs-zip@^1.0.4",
  "_hasShrinkwrap": false,
  "_id": "nodeJs-zip@1.0.4",
  "_location": "/nodeJs-zip",
  "_nodeVersion": "6.2.2",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/nodeJs-zip-1.0.4.tgz_1473768717249_0.47134111262857914"
  },
  "_npmUser": {
    "name": "mrbian",
    "email": "554565808@qq.com"
  },
  "_npmVersion": "3.9.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nodeJs-zip@^1.0.4",
    "scope": null,
    "escapedName": "nodeJs-zip",
    "name": "nodeJs-zip",
    "rawSpec": "^1.0.4",
    "spec": ">=1.0.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "http://registry.npm.taobao.org/nodeJs-zip/download/nodeJs-zip-1.0.4.tgz",
  "_shasum": "f088d2d1bd65219ff5eeb050e8ee5ab53f4de876",
  "_shrinkwrap": null,
  "_spec": "nodeJs-zip@^1.0.4",
  "_where": "D:\\nodesvn",
  "author": {
    "name": "bian"
  },
  "dependencies": {
    "node-zip": "^1.1.1"
  },
  "description": "zip module of nodejs",
  "devDependencies": {},
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "f088d2d1bd65219ff5eeb050e8ee5ab53f4de876",
    "size": 4339,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/nodeJs-zip/download/nodeJs-zip-1.0.4.tgz"
  },
  "gitHead": "b78f4f3c5be02e37e901f5f10c07fe4404a67a61",
  "keywords": [
    "nodejs-zip"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mrbian",
      "email": "554565808@qq.com"
    }
  ],
  "name": "nodeJs-zip",
  "optionalDependencies": {},
  "publish_time": 1473768720528,
  "readme": "#nodejs-zip\r\n\r\nnodejs-zip\r\n\r\n```nodeJsZip.zip``` and ```nodeJsZip.unzip``` is sync function\r\n\r\n## Installation\r\n```javascript\r\nnpm install nodeJs-zip --save\r\n``` \r\n\r\n## Usage\r\n\r\nzip a file \r\n```javascript\r\nvar nodeJsZip = require(\"nodeJs-zip\");\r\n\r\nvar file = path.join(__dirname,\"./file.js\");\r\n\r\nnodeJsZip.zip(file);\r\n```\r\n\r\nzip a directory\r\n```javascript\r\nvar nodeJsZip = require(\"nodeJs-zip\");\r\n\r\nvar dir = path.join(__dirname,\"./directory\");\r\n\r\nnodeJsZip.zip(dir);\r\n```\r\n\r\nZip file and directory\r\n```javascript\r\nvar nodeJsZip = require(\"nodeJs-zip\");\r\n\r\nvar dir = path.join(__dirname,\"./directory\");\r\nvar file = path.join(__dirname,\"./file.js\");\r\n\r\nnodeJsZip.zip([dir,file]);\r\n```\r\n\r\nunzip \r\n```javascript\r\nvar callback = function(isDir,name,data){\r\n    if(isDir){\r\n    \r\n        // you can filter some directory here\r\n        \r\n        fs.mkdirSync(path.join(root,name));\r\n    }else{\r\n    \r\n        // you can filter some file here\r\n        \r\n        fs.writeFileSync(path.join(root,name),data);\r\n    }\r\n}\r\nnodeJsZip.unzip(path.join(__dirname,\"./demo.zip\"),callback);\r\n```\r\n\r\nzip file with filter\r\n```javascript\r\nvar nodeJsZip = require(\"nodeJs-zip\");\r\n\r\nvar dir = path.join(__dirname,\"./directory\");\r\nvar file = path.join(__dirname,\"./file.js\");\r\n\r\nvar include = [path.join(__dirname,\"./directory/a.js\")];\r\n \r\nvar filter = function(e){\r\n    return include.indexOf(p) !== -1;\r\n};\r\n\r\nnodeJsZip.zip([dir,file],{\r\n            name : \"test1\",             \r\n            dir : __dirname,            \r\n            filter : false             \r\n},filter);\r\n```\r\n## API\r\n### nodeJsZip.zip\r\n-   ```nodeJsZip.zip(file)```\r\n-   ```nodeJsZip.zip(dir)```\r\n-   ```nodeJsZip.zip([file,dir,...])```\r\n-   ```nodeJsZip.zip([file,dir,...],options,callback)```\r\n\r\n#### ```[file,dir]```\r\nThe path of file or dir must be absolute path\r\n\r\n#### ```options``` object properties\r\n\r\n| Property  | Default| Description|\r\n|---|---|------|\r\n|  dir | process.cwd() | the dir of output zip file |\r\n|  name | out | the name of output zip file |\r\n|  filter | false | is filter file in directory to exclude some files in directory |\r\n|  encoding | utf8 | the encoding of text file to zip |\r\n\r\n\r\n#### ```callback(path)```\r\n- ```path```\r\n\r\nThe absolute path of the files in the directory which is going to be compressed\r\n\r\n- return\r\nreturn true to include the file or directory,return false to exclude the file or directory\r\n\r\n\r\n### nodeJsZip.unzip\r\nTraverse all files and directory in zip file in order\r\n\r\n- ```nodeJsZip.unzip(file,callback)```\r\n\r\n#### file \r\nthe absolute path of a zip file which is going to be uncompressed\r\n\r\n#### ```callback(isDir,name,data)```\r\n- isDir \r\ntrue or false, \r\n- name\r\nthe name of a file or directory in zip file\r\n- data\r\nif it is a file , the binary data of file \r\n\r\n### nodeJsZip.unzipBigFile\r\nAsync unzip a big file , this function use ```fs.createReadStream``` not ```fs.readFileSync``` to save memory\r\n\r\n#### file\r\nthe absolute path of a zip file which is going to be uncompressed\r\n\r\n#### ```callback(isDir,name,data)```\r\n- isDir \r\ntrue or false, \r\n- name\r\nthe name of a file or directory in zip file\r\n- data\r\nif it is a file , the binary data of file \r\n\r\n#### done()\r\nthe function which will be forked when the unzip process is done\r\n\r\n## IDE\r\n![WebStorm](https://confluence.jetbrains.com/download/thumbnails/51943829/WebStorm_400x400_Twitter_logo_white.png?version=1&modificationDate=1451316090000&api=v2)\r\n\r\n## LICENSE\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2016 mrbian\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://git.oschina.net/mrbian/nodejs-zip.git"
  },
  "scripts": {
    "start": "node bin/index.js",
    "test": "mocha test/test.js"
  },
  "version": "1.0.4"
}
