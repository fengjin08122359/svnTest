{
  "_args": [
    [
      {
        "raw": "xml2json@^0.11.0",
        "scope": null,
        "escapedName": "xml2json",
        "name": "xml2json",
        "rawSpec": "^0.11.0",
        "spec": ">=0.11.0 <0.12.0",
        "type": "range"
      },
      "D:\\nodesvn\\node_modules\\nodejs-svn"
    ]
  ],
  "_cnpm_publish_time": 1522012469386,
  "_from": "xml2json@^0.11.0",
  "_hasShrinkwrap": false,
  "_id": "xml2json@0.11.2",
  "_location": "/xml2json",
  "_nodeVersion": "9.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/xml2json_0.11.2_1522012469232_0.044561029298955335"
  },
  "_npmUser": {
    "name": "c4milo",
    "email": "camilo.aguilar@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xml2json@^0.11.0",
    "scope": null,
    "escapedName": "xml2json",
    "name": "xml2json",
    "rawSpec": "^0.11.0",
    "spec": ">=0.11.0 <0.12.0",
    "type": "range"
  },
  "_requiredBy": [
    "/nodejs-svn"
  ],
  "_resolved": "http://registry.npm.taobao.org/xml2json/download/xml2json-0.11.2.tgz",
  "_shasum": "70ddd234fd7818312cc58455cab8457b5bcc7c52",
  "_shrinkwrap": null,
  "_spec": "xml2json@^0.11.0",
  "_where": "D:\\nodesvn\\node_modules\\nodejs-svn",
  "bin": {
    "xml2json": "bin/xml2json"
  },
  "bugs": {
    "url": "https://github.com/buglabs/node-xml2json/issues"
  },
  "contributors": [
    {
      "name": "Arek W arek01@gmail.com"
    },
    {
      "name": "Camilo Aguilar camilo.aguilar@gmail.com"
    },
    {
      "name": "Craig Condon craig@spiceapps.com"
    },
    {
      "name": "Daniel Bretoi daniel@bretoi.com"
    },
    {
      "name": "Daniel Juhl danieljuhl@gmail.com"
    },
    {
      "name": "Dmitry Fink github@finik.net"
    },
    {
      "name": "Garvit Sharma garvits45@gmail.com"
    },
    {
      "name": "Julian Duque julianduquej@gmail.com"
    },
    {
      "name": "Karl Böhlmark karl.bohlmark@edgeware.tv"
    },
    {
      "name": "Kevin McTigue firefoxman1@gmail.com"
    },
    {
      "name": "Kirill Vergun github.com@o-nix.me"
    },
    {
      "name": "Maher Beg maherbeg@gmail.com"
    },
    {
      "name": "Nicholas Kinsey pyrotechnick@feistystudios.com"
    },
    {
      "name": "Rob Brackett rob@robbrackett.com"
    },
    {
      "name": "Subbu Allamaraju subbu@ebaysf.com"
    },
    {
      "name": "The Gitter Badger badger@gitter.im"
    },
    {
      "name": "Trotter Cashion cashion@gmail.com"
    },
    {
      "name": "Yan idy0013@gmail.com"
    },
    {
      "name": "Ziggy Jonsson ziggy.jonsson.nyc@gmail.com"
    },
    {
      "name": "andres suarez zertosh@gmail.com"
    },
    {
      "name": "andris9 andris@node.ee"
    },
    {
      "name": "fengmk2 fengmk2@gmail.com"
    }
  ],
  "dependencies": {
    "hoek": "^4.2.1",
    "joi": "^13.1.2",
    "node-expat": "^2.3.15"
  },
  "description": "Converts xml to json and vice-versa, using node-expat.",
  "devDependencies": {
    "code": "^3.0.2",
    "lab": "11.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "70ddd234fd7818312cc58455cab8457b5bcc7c52",
    "size": 19070,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/xml2json/download/xml2json-0.11.2.tgz"
  },
  "gitHead": "64a58366fbef139b3be42ee96228bbda867654b1",
  "homepage": "https://github.com/buglabs/node-xml2json#readme",
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "buglabs",
      "email": "eng@buglabs.net"
    },
    {
      "name": "c4milo",
      "email": "camilo.aguilar@gmail.com"
    }
  ],
  "name": "xml2json",
  "optionalDependencies": {},
  "publish_time": 1522012469386,
  "readme": "# Simple XML2JSON Parser\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/buglabs/node-xml2json?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/buglabs/node-xml2json.svg?branch=master)](https://travis-ci.org/buglabs/node-xml2json)\n\nIt does not parse the following elements:\n\n* CDATA sections (*)\n* Processing instructions\n* XML declarations\n* Entity declarations\n* Comments\n\nThis module uses node-expat which will require extra steps if you want to get it installed on Windows. Please\nrefer to its [documentation](http://node-xmpp.org/doc/expat.html#installing-on-windows?). Also, please be aware of known issues installing node-expat on Windows: https://github.com/node-xmpp/node-expat/issues?utf8=✓&q=is%3Aissue+is%3Aopen+windows\n\n## Installation\n```\n$ npm install xml2json\n```\n\n## Usage\n```javascript\nvar parser = require('xml2json');\n\nvar xml = \"<foo attr=\\\"value\\\">bar</foo>\";\nconsole.log(\"input -> %s\", xml)\n\n// xml to json\nvar json = parser.toJson(xml);\nconsole.log(\"to json -> %s\", json);\n\n// json to xml\nvar xml = parser.toXml(json);\nconsole.log(\"back to xml -> %s\", xml)\n```\n\n## API\n\n```javascript\nparser.toJson(xml, options);\n```\n```javascript\nparser.toXml(json);\n```\n\n### Options object for `toJson`\n\nDefault values:\n```javascript\nvar options = {\n    object: false,\n    reversible: false,\n    coerce: false,\n    sanitize: true,\n    trim: true,\n    arrayNotation: false\n    alternateTextNode: false\n};\n```\n\n* **object:** Returns a Javascript object instead of a JSON string\n* **reversible:** Makes the JSON reversible to XML (*)\n* **coerce:** Makes type coercion. i.e.: numbers and booleans present in attributes and element values are converted from string to its correspondent data types. Coerce can be optionally defined as an object with specific methods of coercion based on attribute name or tag name, with fallback to default coercion.\n* **trim:** Removes leading and trailing whitespaces as well as line terminators in element values.\n* **arrayNotation:** XML child nodes are always treated as arrays NB: you can specify a selective array of nodes for this to apply to instead of the whole document. \n* **sanitize:** Sanitizes the following characters present in element values:\n\n```javascript\nvar chars =  {\n    '<': '&lt;',\n    '>': '&gt;',\n    '(': '&#40;',\n    ')': '&#41;',\n    '#': '&#35;',\n    '&': '&amp;',\n    '\"': '&quot;',\n    \"'\": '&apos;'\n};\n```\n* **alternateTextNode:** Changes the default textNode property from $t to _t when option is set to true. Alternatively a string can be specified which will override $t to what ever the string is.\n\n\n### Options object for `toXml`\n\nDefault values:\n```javascript\nvar options = {\n    sanitize: false\n};\n```\n\n`sanitize: false` is the default option to behave like previous versions\n\n\n(*) xml2json tranforms CDATA content to JSON, but it doesn't generate a reversible structure.\n\n## License\n(The MIT License)\n\nCopyright (c) 2016 xml2json AUTHORS \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/buglabs/node-xml2json.git"
  },
  "scripts": {
    "test": "lab -a code -v -t 93 test/test.js"
  },
  "version": "0.11.2"
}
